[{"/home/rithesh/Rithu/Project/MeltingMedia/mm-frontend/src/reportWebVitals.js":"1","/home/rithesh/Rithu/Project/MeltingMedia/mm-frontend/src/components/shared/Header/Header.js":"2","/home/rithesh/Rithu/Project/MeltingMedia/mm-frontend/src/App.js":"3","/home/rithesh/Rithu/Project/MeltingMedia/mm-frontend/src/components/auth/Signup.js":"4","/home/rithesh/Rithu/Project/MeltingMedia/mm-frontend/src/components/auth/helper/helper.js":"5","/home/rithesh/Rithu/Project/MeltingMedia/mm-frontend/src/components/auth/Signin.js":"6","/home/rithesh/Rithu/Project/MeltingMedia/mm-frontend/src/components/main/Base.js":"7","/home/rithesh/Rithu/Project/MeltingMedia/mm-frontend/src/components/shared/Left/Left.js":"8","/home/rithesh/Rithu/Project/MeltingMedia/mm-frontend/src/components/shared/Right/Right.js":"9","/home/rithesh/Rithu/Project/MeltingMedia/mm-frontend/src/components/main/Home.js":"10","/home/rithesh/Rithu/Project/MeltingMedia/mm-frontend/src/components/post/Card.js":"11","/home/rithesh/Rithu/Project/MeltingMedia/mm-frontend/src/components/post/AddPost.js":"12","/home/rithesh/Rithu/Project/MeltingMedia/mm-frontend/src/components/post/helper/helper.js":"13","/home/rithesh/Rithu/Project/MeltingMedia/mm-frontend/src/components/post/Success.js":"14","/home/rithesh/Rithu/Project/MeltingMedia/mm-frontend/src/index.js":"15","/home/rithesh/Rithu/Project/MeltingMedia/mm-frontend/src/components/user/Profile.js":"16","/home/rithesh/Rithu/Project/MeltingMedia/mm-frontend/src/components/user/helper/helper.js":"17"},{"size":362,"mtime":1606495795404,"results":"18","hashOfConfig":"19"},{"size":1337,"mtime":1606843649229,"results":"20","hashOfConfig":"19"},{"size":877,"mtime":1606902104465,"results":"21","hashOfConfig":"19"},{"size":6035,"mtime":1606843663122,"results":"22","hashOfConfig":"19"},{"size":1497,"mtime":1606542779899,"results":"23","hashOfConfig":"19"},{"size":3948,"mtime":1606901071515,"results":"24","hashOfConfig":"19"},{"size":460,"mtime":1606902158341,"results":"25","hashOfConfig":"19"},{"size":1664,"mtime":1606907327763,"results":"26","hashOfConfig":"19"},{"size":167,"mtime":1606545621027,"results":"27","hashOfConfig":"19"},{"size":1392,"mtime":1606892705856,"results":"28","hashOfConfig":"19"},{"size":5559,"mtime":1606898065690,"results":"29","hashOfConfig":"19"},{"size":6204,"mtime":1606899102251,"results":"30","hashOfConfig":"19"},{"size":1983,"mtime":1606898813449,"results":"31","hashOfConfig":"19"},{"size":496,"mtime":1606558868589,"results":"32","hashOfConfig":"19"},{"size":500,"mtime":1606495795404,"results":"33","hashOfConfig":"19"},{"size":1502,"mtime":1606904979976,"results":"34","hashOfConfig":"19"},{"size":368,"mtime":1606902570990,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"hnpufb",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"41"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"41"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"41"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"41"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/rithesh/Rithu/Project/MeltingMedia/mm-frontend/src/reportWebVitals.js",[],["81","82"],"/home/rithesh/Rithu/Project/MeltingMedia/mm-frontend/src/components/shared/Header/Header.js",[],["83","84"],"/home/rithesh/Rithu/Project/MeltingMedia/mm-frontend/src/App.js",["85","86","87"],"import './App.css';\nimport {BrowserRouter, Switch, Route, Redirect} from \"react-router-dom\";\nimport Home from './components/main/Home';\nimport Signup from './components/auth/Signup';\nimport Signin from './components/auth/Signin';\nimport AddPost from './components/post/AddPost';\nimport { useEffect } from 'react';\nimport { isAuthenticated } from './components/auth/helper/helper';\nimport Profile from './components/user/Profile';\n\nfunction App() {\n\n  return (\n    <BrowserRouter>   \n        <Switch>\n            <Route path=\"/signin\" exact component={Signin} />\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/signup\" exact component={Signup} />\n            <Route path=\"/add\" exact component={AddPost} /> \n            <Route path=\"/profile\" exact component={Profile} /> \n\n        </Switch>     \n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/home/rithesh/Rithu/Project/MeltingMedia/mm-frontend/src/components/auth/Signup.js",["88","89"],"import React, { useState } from \"react\";\nimport Base from \"../main/Base\";\nimport { Link } from \"react-router-dom\";\nimport { signup } from \"./helper/helper\";\nimport \"./helper/styles.css\";\nimport logo from \"../../assets/logo.png\";\nimport ReactCrop from \"react-image-crop\";\nimport \"react-image-crop/dist/ReactCrop.css\";\nimport Header from \"../shared/Header/Header\";\n\nconst Signup = () => {\n  const [values, setValues] = useState({\n    name: \"\",\n    email: \"\",\n    photo: \"\",\n    password: \"\",\n    number: \"\",\n    error: \"\",\n    success: \"\",\n  });\n\n  const [src, selectedFile] = useState(null);\n\n  const handleFileChange = (e) => {\n    selectedFile(URL.createObjectURL(e.target.files[0]));\n  };\n  const [image, setImage] = useState(null);\n  const [result, setResult] = useState(null);\n\n  const [crop, setCrop] = useState({ aspect: 1 / 1 });\n\n  function getCroppedImg() {\n    const canvas = document.createElement(\"canvas\");\n    const scaleX = image.naturalWidth / image.width;\n    const scaleY = image.naturalHeight / image.height;\n    canvas.width = crop.width;\n    canvas.height = crop.height;\n    const ctx = canvas.getContext(\"2d\");\n\n    ctx.drawImage(\n      image,\n      crop.x * scaleX,\n      crop.y * scaleY,\n      crop.width * scaleX,\n      crop.height * scaleY,\n      0,\n      0,\n      crop.width,\n      crop.height\n    );\n    const base64Image = canvas.toDataURL(\"image/jpeg\");\n    setResult(base64Image);\n    setValues({ ...values, photo: base64Image });\n  }\n\n  const { name, email, password, number, photo, error, success } = values;\n\n  const handleChange = (name) => (event) => {\n    setValues({ ...values, error: false, [name]: event.target.value });\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    setValues({ ...values, error: false });\n    signup({ name, email, password, photo, number })\n      .then((data) => {\n        if (data.error) {\n          setValues({ ...values, error: data.error, success: false });\n        } else {\n          setValues({\n            ...values,\n            name: \"\",\n            email: \"\",\n            password: \"\",\n            photo: \"\",\n            error: \"\",\n            number: \"\",\n            success: true,\n          });\n          selectedFile(\"\")\n        }\n      })\n      .catch(() => {\n        console.log(\"error in signup\");\n      });\n  };\n\n  const signUpForm = () => {\n    return (\n      <div className=\"login\">\n        <Link to=\"/\">\n          <img className=\"login__logo\" src={logo} />\n        </Link> \n\n        <div className=\"login__container\">\n          <h1>Create Account</h1>\n          <div className=\"signup__profile__pic\">\n            {src ? (\n              <div className=\"addpost__image\">\n                {src && (\n                  <div className=\"addpost__src\">\n                    <div className=\"addpost__pic\">\n                      <ReactCrop\n                        src={src}\n                        onImageLoaded={setImage}\n                        crop={crop}\n                        onChange={setCrop}\n                        className=\"addpost__photo\"\n                      />\n                    </div>\n                    <div className=\"addpost__crop\">\n                      <button\n                        className=\"addpost__crop__button\"\n                        onClick={getCroppedImg}\n                      >\n                        Crop Image\n                      </button>\n                    </div>\n                  </div>\n                )}\n                {result && (\n                  <div className=\"addpost__result\">\n                    <h1>Selected image</h1>\n                    <img src={photo} alt=\"\" className=\"addpost__photo\" />\n                    {/* {console.log(imageUrl)} */}\n                  </div>\n                )}\n              </div>\n            ) : (\n              <div className=\"\">\n                <div className=\"\">\n                  <div className=\"\">\n                    <input\n                      type=\"file\"\n                      accept=\"/image/*\"\n                      onChange={handleFileChange}\n                    />\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n\n          <form>\n            <h5>Your name</h5>\n            <input type=\"text\" value={name} onChange={handleChange(\"name\")} />\n            <h5>Mobile number</h5>\n            <input\n              type=\"tel\"\n              value={number}\n              onChange={handleChange(\"number\")}\n            />\n            <h5>E-mail</h5>\n            <input type=\"text\" value={email} onChange={handleChange(\"email\")} />\n\n            <h5>Password</h5>\n            <input\n              type=\"password\"\n              value={password}\n              onChange={handleChange(\"password\")}\n            />\n\n            <button\n              type=\"submit\"\n              onClick={onSubmit}\n              className=\"login__signInButton\"\n            >\n              Register\n            </button>\n          </form>\n\n          <p style={{ \"text-align\": \"center\" }}>\n            Already have an account? <Link to=\"/login\">Sign in</Link>\n          </p>\n        </div>\n      </div>\n    );\n  };\n\n  const errorMessage = () => {\n    return (\n      <div className=\"\">\n        <div className=\"\">\n          <div\n            className=\"message__error\"\n            style={{ display: error ? \"\" : \"none\" }}\n          >\n            {error}\n          </div>\n        </div>\n      </div>\n    );\n  };\n  const successMessage = () => {\n    return (\n      <div className=\"\">\n        <div className=\"\">\n          <div\n            className=\"message__success\"\n            style={{ display: success ? \"\" : \"none\" }}\n          >\n            New account was created successfully. Please{\" \"}\n            <Link to=\"/signin\">Login here</Link>\n          </div>\n        </div>\n      </div>\n    );\n  };\n  return (\n    <div>\n      <Header/>\n      {successMessage()}\n      {errorMessage()}\n      {signUpForm()}\n      {/* <p className=\"text-light text-center\">{JSON.stringify(values)}</p> */}\n    </div>\n  );\n};\n\nexport default Signup;\n",["90","91"],"/home/rithesh/Rithu/Project/MeltingMedia/mm-frontend/src/components/auth/helper/helper.js",[],["92","93"],"/home/rithesh/Rithu/Project/MeltingMedia/mm-frontend/src/components/auth/Signin.js",["94","95"],"/home/rithesh/Rithu/Project/MeltingMedia/mm-frontend/src/components/main/Base.js",[],"/home/rithesh/Rithu/Project/MeltingMedia/mm-frontend/src/components/shared/Left/Left.js",[],"/home/rithesh/Rithu/Project/MeltingMedia/mm-frontend/src/components/shared/Right/Right.js",[],"/home/rithesh/Rithu/Project/MeltingMedia/mm-frontend/src/components/main/Home.js",["96","97","98"],"import React, { useEffect, useState } from \"react\";\nimport Base from \"./Base\";\nimport Card from \"../post/Card\";\nimport { getPosts } from \"../post/helper/helper\";\nimport { isAuthenticated } from \"../auth/helper/helper\";\nimport { Redirect } from \"react-router-dom\";\n\nfunction Home() {\n  const { token, user } = isAuthenticated();\n  const [data, setData] = useState([]);\n\n  const getAllposts = () => {\n    getPosts()\n      .then((res) => setData(res.reverse()))\n      .then(console.log(\"datA\", data))\n      .catch((err) => console.log(err));\n  };\n\n  useEffect(() => {\n    getAllposts();\n    console.log(\"DAta\", data);\n  }, []);\n\n  const HomePage = () => {\n    return (\n      <Base>\n        <div>\n          {data.map((post, i) => (\n            <Card\n              key={i}\n              id={post._id}\n              userName={post.postedBy}\n              userPic={post.postedByUrl}\n              time={post.createdAt}\n              imageUrl={post.imageUrl}\n              tags={post.tags}\n              title={post.title}\n              likes={post.likes}\n              likedUsers={post.likedUsers}\n              comments={post.comments}\n            />\n          ))}\n        </div>\n      </Base>\n    );\n  };\n\n  const Redir = () => {\n    if(!isAuthenticated())\n    return <Redirect to=\"/signin\" />;\n  };\n\n  return (\n    <div>\n      {Redir()}\n      {HomePage()}\n    </div>\n  );\n}\n\nexport default Home;\n",["99","100"],"/home/rithesh/Rithu/Project/MeltingMedia/mm-frontend/src/components/post/Card.js",["101","102","103","104","105","106","107","108","109","110"],"import React, { useState, useEffect } from \"react\";\nimport \"./helper/Card.css\";\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\nimport ThumbDownIcon from \"@material-ui/icons/ThumbDown\";\nimport CommentIcon from \"@material-ui/icons/Comment\";\nimport { isAuthenticated } from \"../auth/helper/helper\";\nimport { updatePost } from \"./helper/helper\";\nimport moment from 'moment';\n\nfunction Card({\n  id,\n  userName,\n  userPic,\n  time,\n  imageUrl,\n  title,\n  tags,\n  likedUsers,\n  comments,\n}) {\n  const { token, user } = isAuthenticated();\n\n  const [commentSection, setCommentSection] = useState(false);\n\n  const [contents, setContents] = useState({\n    user: user.name,\n    userImageUrl: user.photo,\n    message: \"\",\n  });\n  const [card, setCard] = useState(false);\n\n  const handleChangeAct = (name) => (event) => {\n    const value = name === \"photo\" ? event.target.files[0] : event.target.value;\n    setContents({ ...contents, [name]: value });\n  };\n\n  const addCard = (event) => {\n    event.preventDefault();\n    comments.push(contents);\n    setContents({ ...contents, message: \"\" });\n    setCard(false);\n    updatePost(token, id, { comments: comments })\n      .then((res) => console.log(res))\n      .catch((err) => console.log(err));\n  };\n\n  // const [usersLiked, setUsersLiked] = useState(likedUsers);\n  // const [usersLiked, setUsersLiked] = useState(likedUsers);\n\n  const [count, setCount] = useState(likedUsers.length);\n\n  const addLike = (event) => {\n    event.preventDefault();\n    if (likedUsers.length == 0) {\n      console.log(\"User liked\");\n      likedUsers.push(user._id)\n      setCount(count + 1)\n      updatePost(token, id, { likedUsers: likedUsers }) \n        .then((res) =>\n          // setUsersLiked(\"\"),\n          console.log(res)\n        )\n        .catch((err) => console.log(err));\n    } else {\n      likedUsers.forEach((usr) => {\n        console.log(\"usr\", usr);\n        if (usr == user._id) {\n          alert(\"User already liked\");\n        } else {\n          setCount(count + 1)\n          console.log(\"User liked\");\n          // setUsersLiked(...likedUsers, user._id);\n          likedUsers.push(user._id)\n          updatePost(token, id, { likedUsers: likedUsers })\n            .then((res) =>\n              // setUsersLiked(\"\"),\n              console.log(res)\n            )\n            .catch((err) => console.log(err));\n        }\n      });\n    }\n  };\n\n  const CardSection = () => {\n    return (\n      <div className=\"card\">\n        <div className=\"card__user__info\">\n          <img className=\"card__user__pic\" src={userPic} alt=\"\" />\n          <div className=\"card__user__info__name\">\n            <h3>{userName}</h3>\n            {/* <span style={{ fontSize: \"11px\" }}>{moment(time).format(\"D MMM YYYY\")}</span> */}\n            <span style={{ fontSize: \"11px\" }}>{moment(time).fromNow()}</span>\n          </div>\n        </div>\n\n        <div className=\"card__image\">\n          <img src={imageUrl} alt=\"\" />\n        </div>\n        <div className=\"card__title\">\n          <h3>{title}</h3>\n        </div>\n        <div className=\"card__tags\">\n          {tags &&\n            tags.map((tag, i) => {\n              return <p index={i}>{tag}</p>;\n            })}\n        </div>\n        <div className=\"card__info\">\n          <a onClick={addLike}>\n            <ThumbUpIcon className=\"card__info__up\" className=\"card__like__btn\" />\n          </a>\n          <CommentIcon className=\"card__info__comment\" className=\"card__comment__btn\" onClick={() => setCard(true)}/>\n        </div>\n        <div className=\"card__info__likes\">\n          <p>{count} likes</p>\n          <p style={{ position: \"absolute\", right: \"10px\" }}>\n            {comments.length} comments\n          </p>\n        </div>\n\n        {commentSection ? (\n          <div>\n            <a\n              onClick={() => setCommentSection(false)}\n              className=\"card__showComment__true\"\n            >\n              Hide comments\n            </a>\n\n            {comments &&\n              comments.map((comment, i) => (\n                <div className=\"card__comment\" key={i}>\n                  <div className=\"card__comment__user\">\n                    <img\n                      className=\"card__comment__pic\"\n                      src={comment.userImageUrl}\n                      alt=\"\"\n                    />\n                    <h4>{comment.user}</h4>\n                  </div>\n                  <p style={{ marginTop: \"8px\" }}>{comment.message}</p>\n                </div>\n              ))}\n          </div>\n        ) : (\n          <a\n            onClick={() => setCommentSection(true)}\n            className=\"card__showComment__false\"\n          >\n            Show comments\n          </a>\n        )}\n\n        {card ? (\n          <div className=\"card__comment\">\n            <div className=\"card__comment__user\">\n              <img className=\"card__comment__pic\" src={user.photo} alt=\"\" />\n              <h4>{user.name}</h4>\n            </div>\n            <div className=\"card__addComment__section\">\n              <input\n                style={{ marginTop: \"8px\" }}\n                onChange={handleChangeAct(\"message\")}\n                className=\"card__addComment__input\"\n              />\n              <a onClick={addCard} className=\"card__addComment__btn\">\n                Add\n              </a>\n            </div>\n          </div>\n        ) : (\n          \"\"\n        )}\n        <div className=\"card__addComment\" onClick={() => setCard(true)}>\n          <p className=\"\">Add comment</p>\n        </div>\n      </div>\n    );\n  };\n\n  return <div>{CardSection()}</div>;\n}\n\nexport default Card;\n","/home/rithesh/Rithu/Project/MeltingMedia/mm-frontend/src/components/post/AddPost.js",["111","112","113"],"import React, { useState, useEffect } from \"react\";\nimport ReactCrop from \"react-image-crop\";\nimport \"react-image-crop/dist/ReactCrop.css\";\n\nimport Success from \"./Success\";\nimport { createPost, updateUserPost } from \"./helper/helper\";\nimport { isAuthenticated } from \"../auth/helper/helper\";\nimport Base from \"../main/Base\";\nimport \"./helper/AddPost.css\";\n\nconst AddArticle = () => {\n  const { token, user } = isAuthenticated();\n  const [forTags, setForTags] = useState({\n    tagname: \"\",\n    taglist: [],\n  });\n  const { tagname, taglist } = forTags;\n  const [values, setValues] = useState({\n    title: \"\",\n    imageUrl: \"\",\n    postedBy: user.name,\n    postedByUrl: user.photo,\n    tags: [],\n    comments:[],\n    error: \"\",\n    success: \"\",\n  });\n  const { title, imageUrl, tags, error, success,comments } = values;\n\n  const [src, selectedFile] = useState(null);\n\n  const handleFileChange = (e) => {\n    selectedFile(URL.createObjectURL(e.target.files[0]));\n  };\n  const [image, setImage] = useState(null);\n  const [result, setResult] = useState(null);\n\n  const [crop, setCrop] = useState({ aspect: 681 / 383 });\n\n  function getCroppedImg() {\n    const canvas = document.createElement(\"canvas\");\n    const scaleX = image.naturalWidth / image.width;\n    const scaleY = image.naturalHeight / image.height;\n    canvas.width = crop.width;\n    canvas.height = crop.height;\n    const ctx = canvas.getContext(\"2d\");\n\n    ctx.drawImage(\n      image,\n      crop.x * scaleX,\n      crop.y * scaleY,\n      crop.width * scaleX,\n      crop.height * scaleY,\n      0,\n      0,\n      crop.width,\n      crop.height\n    );\n    const base64Image = canvas.toDataURL(\"image/jpeg\");\n    setResult(base64Image);\n    setValues({ ...values, imageUrl: base64Image });\n  }\n\n  const updateTag = (tag) => {\n    setForTags({\n      ...forTags,\n      tagname: tag,\n    });\n  };\n  const addTag = (tag) => {\n    if (tag !== \"\") {\n      const taglist = [...forTags.taglist];\n      taglist.push(tag);\n      setForTags({\n        ...forTags,\n        taglist: taglist,\n        tagname: \"\",\n      });\n    }\n  };\n  const handleChange = (name) => (event) => {\n    const value = name === \"photo\" ? event.target.files[0] : event.target.value;\n    setValues({ ...values, [name]: value });\n  };\n  const onSubmit = (event) => {\n    event.preventDefault();\n    for (let index = 0; index < taglist.length; index++) {\n      tags.push(taglist[index]);\n    }\n\n    setValues({ ...values, error: \"\" });\n\n    console.log(\"values\", values);\n    createPost(token, user._id, values).then((data) => {\n      console.log(\"data\", data);\n      if (data.err) {\n        setValues({ ...values, error: data.err });\n      } else {\n        updateUserPost(token, user._id, {post: data})\n        .then()\n        .catch()\n        setValues({\n          ...values,\n          title: \"\",\n          imageUrl: \"\",\n          tags: [],\n          error: \"\",\n          success: \"true\",\n        });\n      }\n    });\n  };\n\n  const errorMessage = () => (\n    <div className=\"message__error\" style={{ display: error ? \"\" : \"none\" }}>\n      <h4>{error}</h4>\n    </div>\n  );\n  const createArticle = () => {\n    return (\n      <Base>\n        <div className=\"addpost\">\n          {src ? (\n            <div className=\"addpost__image\">\n              {src && (\n                <div className=\"addpost__src\">\n                  <div className=\"addpost__pic\">\n                    <ReactCrop\n                      src={src}\n                      onImageLoaded={setImage}\n                      crop={crop}\n                      onChange={setCrop}\n                      className=\"addpost__photo\"\n                    />\n                  </div>\n                  <div className=\"addpost__crop\">\n                    <button\n                      className=\"addpost__crop__button\"\n                      onClick={getCroppedImg}\n                    >\n                      Crop Image\n                    </button>\n                  </div>\n                </div>\n              )}\n              {result && (\n                <div className=\"addpost__result\">\n                  <h1>Selected image</h1>\n                  <img src={imageUrl} alt=\"\" className=\"addpost__photo\" />\n                  {/* {console.log(imageUrl)} */}\n                </div>\n              )}\n            </div>\n          ) : (\n            <div className=\"\">\n              <div className=\"\">\n                <div className=\"\">\n                  <input\n                    type=\"file\"\n                    accept=\"/image/*\"\n                    onChange={handleFileChange}\n                  />\n                </div>\n              </div>\n            </div>\n          )}\n\n          <div className=\"addpost__title__section\">\n            <h2 className=\"addpost__title\">Title</h2>\n            <textarea\n              onChange={handleChange(\"title\")}\n              className=\"\"\n              cols=\"50\"\n              rows=\"5\"\n            />\n          </div>\n\n          <div className=\"addpost__tag__section\">\n            <ul>\n              {taglist &&\n                taglist.map((item, i) => {\n                  return (\n                    // <li>\n                    <span key={i} className=\"addpost__tag\">\n                      {item}\n                    </span>\n                    // </li>\n                  );\n                })}\n            </ul>\n          </div>\n          <div className=\"addpost__tag__input__section\">\n            <input\n              type=\"text\"\n              className=\"addpost__tag__input\"\n              placeholder=\"\"\n              value={tagname}\n              onChange={(e) => updateTag(e.target.value)}\n            />\n            <a className=\"addpost__tag__btn\" onClick={() => addTag(tagname)}>\n              Add Tag\n            </a>\n          </div>\n          {title && imageUrl && (\n            <div className=\"addpost__submit\">\n              <button className=\"addpost__submit__btn\" onClick={onSubmit}>\n                Publish\n              </button>\n            </div>\n          )}\n        </div>\n      </Base>\n    );\n  };\n\n  if (!success) {\n    return (\n      <div>\n        {errorMessage()}\n        {createArticle()}\n      </div>\n    );\n  } else {\n    return <Success />;\n  }\n};\nexport default AddArticle;\n","/home/rithesh/Rithu/Project/MeltingMedia/mm-frontend/src/components/post/helper/helper.js",[],"/home/rithesh/Rithu/Project/MeltingMedia/mm-frontend/src/components/post/Success.js",[],"/home/rithesh/Rithu/Project/MeltingMedia/mm-frontend/src/index.js",[],"/home/rithesh/Rithu/Project/MeltingMedia/mm-frontend/src/components/user/Profile.js",["114","115"],"import React, { useEffect, useState } from \"react\";\nimport { isAuthenticated } from \"../auth/helper/helper\";\nimport Base from \"../main/Base\";\nimport { getUser } from \"./helper/helper\";\nimport \"./helper/Profile.css\";\n\nfunction Profile() {\n  const [data, setData] = useState({});\n  const { token, user } = isAuthenticated();\n\n  useEffect(() => {\n    getUser(user._id)\n      .then((res) => {\n        setData(res);\n        console.log(res);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  return (\n    <Base>\n      <div className=\"profile\">\n        <div className=\"profile__details\">\n          <div className=\"profile__image\">\n            <img src={data.photo} alt=\"\" className=\"profile__image__pic\" />\n          </div>\n          <div className=\"profile__info\">\n            <h2><span className=\"profile__info__span\">Name:  </span>  {data.name}</h2>\n            <h3><span className=\"profile__info__span\">Email:  </span>  {data.email}</h3>\n            <p><span className=\"profile__info__span\">Phone:  </span>  +91 {data.number}</p>\n          </div>\n        </div>\n\n        <div className=\"profile__posts\">\n          <h1>Posts</h1>\n          <div className=\"profile__posts__images\">\n            {data.post?.map((p, i) => (\n              <img\n                key={i}\n                src={p.imageUrl}\n                alt=\"\"\n                className=\"profile__posts__image\"\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    </Base>\n  );\n}\n\nexport default Profile;\n","/home/rithesh/Rithu/Project/MeltingMedia/mm-frontend/src/components/user/helper/helper.js",[],{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"116","replacedBy":"120"},{"ruleId":"118","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":2,"column":39,"nodeType":"124","messageId":"125","endLine":2,"endColumn":47},{"ruleId":"122","severity":1,"message":"126","line":7,"column":10,"nodeType":"124","messageId":"125","endLine":7,"endColumn":19},{"ruleId":"122","severity":1,"message":"127","line":8,"column":10,"nodeType":"124","messageId":"125","endLine":8,"endColumn":25},{"ruleId":"122","severity":1,"message":"128","line":2,"column":8,"nodeType":"124","messageId":"125","endLine":2,"endColumn":12},{"ruleId":"129","severity":1,"message":"130","line":92,"column":11,"nodeType":"131","endLine":92,"endColumn":53},{"ruleId":"116","replacedBy":"132"},{"ruleId":"118","replacedBy":"133"},{"ruleId":"116","replacedBy":"134"},{"ruleId":"118","replacedBy":"135"},{"ruleId":"122","severity":1,"message":"128","line":2,"column":8,"nodeType":"124","messageId":"125","endLine":2,"endColumn":12},{"ruleId":"129","severity":1,"message":"130","line":99,"column":11,"nodeType":"131","endLine":102,"endColumn":13},{"ruleId":"122","severity":1,"message":"136","line":9,"column":11,"nodeType":"124","messageId":"125","endLine":9,"endColumn":16},{"ruleId":"122","severity":1,"message":"137","line":9,"column":18,"nodeType":"124","messageId":"125","endLine":9,"endColumn":22},{"ruleId":"138","severity":1,"message":"139","line":22,"column":6,"nodeType":"140","endLine":22,"endColumn":8,"suggestions":"141"},{"ruleId":"116","replacedBy":"142"},{"ruleId":"118","replacedBy":"143"},{"ruleId":"122","severity":1,"message":"126","line":1,"column":27,"nodeType":"124","messageId":"125","endLine":1,"endColumn":36},{"ruleId":"122","severity":1,"message":"144","line":4,"column":8,"nodeType":"124","messageId":"125","endLine":4,"endColumn":21},{"ruleId":"145","severity":1,"message":"146","line":54,"column":27,"nodeType":"147","messageId":"148","endLine":54,"endColumn":29},{"ruleId":"145","severity":1,"message":"146","line":67,"column":17,"nodeType":"147","messageId":"148","endLine":67,"endColumn":19},{"ruleId":"149","severity":1,"message":"150","line":110,"column":11,"nodeType":"131","endLine":110,"endColumn":32},{"ruleId":"151","severity":1,"message":"152","line":111,"column":53,"nodeType":"153","endLine":111,"endColumn":80},{"ruleId":"151","severity":1,"message":"152","line":113,"column":56,"nodeType":"153","endLine":113,"endColumn":86},{"ruleId":"149","severity":1,"message":"150","line":124,"column":13,"nodeType":"131","endLine":127,"endColumn":14},{"ruleId":"149","severity":1,"message":"150","line":147,"column":11,"nodeType":"131","endLine":150,"endColumn":12},{"ruleId":"149","severity":1,"message":"150","line":167,"column":15,"nodeType":"131","endLine":167,"endColumn":70},{"ruleId":"122","severity":1,"message":"126","line":1,"column":27,"nodeType":"124","messageId":"125","endLine":1,"endColumn":36},{"ruleId":"122","severity":1,"message":"154","line":28,"column":49,"nodeType":"124","messageId":"125","endLine":28,"endColumn":57},{"ruleId":"149","severity":1,"message":"150","line":200,"column":13,"nodeType":"131","endLine":200,"endColumn":78},{"ruleId":"122","severity":1,"message":"136","line":9,"column":11,"nodeType":"124","messageId":"125","endLine":9,"endColumn":16},{"ruleId":"138","severity":1,"message":"155","line":18,"column":6,"nodeType":"140","endLine":18,"endColumn":8,"suggestions":"156"},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],["157"],["158"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'isAuthenticated' is defined but never used.","'Base' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["157"],["158"],["157"],["158"],"'token' is assigned a value but never used.","'user' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'data' and 'getAllposts'. Either include them or remove the dependency array.","ArrayExpression",["159"],["157"],["158"],"'ThumbDownIcon' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'comments' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user._id'. Either include it or remove the dependency array.",["160"],"no-global-assign","no-unsafe-negation",{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},"Update the dependencies array to be: [data, getAllposts]",{"range":"165","text":"166"},"Update the dependencies array to be: [user._id]",{"range":"167","text":"168"},[620,622],"[data, getAllposts]",[492,494],"[user._id]"]